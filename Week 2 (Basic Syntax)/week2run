##codeRun04

def summaryOfSections04():
	print("\n----------\nLECTURE 04\n----------\n")

def sectionDataTypes():
	text = '''
Integer:
If you have a whole/natural/integer  number (ie: not a fraction, no decimal point) then we call this an integer, represented with int in python.

Ex: 15,12,450,67234

Float:
If you have a number that is a fraction or it has a decimal place, we call these numbers floats, represented with float in python.

Ex: 3.1459, 10.0, 789.204575


Boolean:
We use the boolean values to store into variables in python, we have the possibilities of storing the value True or False.

Ex: pythonIsCool = True 

String:
When the value of a variable contains text (one or more characters), we call this a string, represented with str in python. We always put single/double quotes around a string.

Ex: "I love my mom"


When using boolean values, we never use quotes, because they are special  keywords





We can force the data type of variables using their respective names that we want to force with brackets around what we want to change.

Ex:
myAge = 10 
floatMyAge = float(myAge)
print(myAge)
print(FloatMyAge)

>> 10
>> 10.0
	'''

	print(text)
	return(text)



def quiz04Question01():
	text  = '''

1. Set an integer as the value of x

x = ________
type(x)

a) 3.4
b) 5.67
c) 832749834

''' 
	print(text)

def  quiz04Question02():
	text = '''

2. Set a float as the value of y

x = ________
type(y)

a) 3
b) 5.67
c) 832749834

'''

	print(text)
	return text

def quiz04Question03():

	text = '''

3. What is it called when a variable value is a number?

a) Integer type
b) Float type
c) Numeric type


	'''
	print(text)
	return text

def quiz04Question04():

	text = '''

4. What is missing to set a string as a value of the friend variable?

friend = "Usain Bolt ___
print(friend)
a) "
b) ;
c) '

	'''
	print(text)
	return text


def quiz04Question05():

	text = '''
5. What is the correct string?

a) movie = 'Inception"
b) movie = "The Great Gatsby
c) movie = 'Napolean Dynamite'

	'''
	print(text)
	return text




def dataTypeQuiz01():
	quiz04Question01()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "c":
		dataTypeQuiz01()

def dataTypeQuiz02():
	quiz04Question02()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "b":
		dataTypeQuiz02()

def dataTypeQuiz03():
	quiz04Question03()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "c":
		dataTypeQuiz03()

def dataTypeQuiz04():
	quiz04Question04()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "a":
		dataTypeQuiz04()


def dataTypeQuiz05():
	quiz04Question05()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "c":
		dataTypeQuiz05()


def runLec04():
	summaryOfSections04()
	sectionDataTypes()
	dataTypeQuiz01()
	dataTypeQuiz02()
	dataTypeQuiz03()
	dataTypeQuiz04()
	dataTypeQuiz05()

	print("***** LECTURE 04 COMPLETE *****")


## codeRun05.py

def summaryOfSections05():
	print("\n----------\nLECTURE 05\n----------\n")

def sectionUserInput():

	text = '''
WHAT IS USER INPUT

A realworld example of taking user input, is whenever we log into zoom/REPL, we need to input our username and password.
Can you think of any real world examples that can be related to user input?

HOW TO TAKE AN INPUT

In python; it is very simple to get input from a user, all we need to do is call the input() function.
This will be used to take information from the user via the terminal.
When using the input function, we can add information on what we want from the user by putting a string inside the function.

Ex:    input("what is your name : ")

Whenever we take an input, it is always taken as a str
by default, but we can force this to be a different type using the type conversion functions seen last class

how to take user input
input("your question here : ")

how to store a users answer into a variable 
userName = input("What is your name ? : ")
print(userName)

type conversion
myAge = int(input("What is your age? : "))

to use a float or int if we are unsure of a numeric input? Why?
we always want to use a float, becasue if we are unsure, it can handle both ints and floats. thus it is more powerful.


	'''
	print(text)
	return text
def quiz05Question1():
	text = '''
1. How to show output (in the terminal) from a program (written in the text editor)?

a) Print() 
b) output()
c) print()

	'''
	print(text)
	return text

def quiz05Question2():
	text = '''
2. Which variable stores a string value

a) fruit = 'strawberry'
b) weight = 678
c) is_winter = false

	'''
	print(text)
	return text
def quiz05Question3():
	text = '''
3. What is the expected output of the following program?

myNum = 5
myNum = myNum + myNum
print(myNum)

a) 5 
b) 10
c) myNum

	'''
	print(text)
	return text
def quiz05Question4():
	text = '''
4.What would be the output of the following program?

cop = 'Paul Blart'
Cop = "Paul Blart"
cop = "Jason Statham"
print(cop)

a) Paul Blart 
b) Jason Statham
c) cop

	'''
	print(text)
	return text

def quiz05Question5():
	text = '''
5. If it is over 30 degrees today, then it is too hot. What is the boolean value to complete the variable 

tooHot = _______

a) yes
b) true
c) True

	'''
	print(text)
	return text

def quiz05Question6():
	text = '''
6. Which of the following is not a numeric data type variable?

a) myAge = 15
b) tooHot = False
c) myTime = 11.30

	'''
	print(text)
	return text

def userInputQuiz01():
	quiz05Question1()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "c":
		userInputQuiz01()
def userInputQuiz02():
	quiz05Question2()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "a":
		userInputQuiz02()
def userInputQuiz03():
	quiz05Question3()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "b":
		userInputQuiz03()
def userInputQuiz04():
	quiz05Question4()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "b":
		userInputQuiz04()
def userInputQuiz05():
	quiz05Question5()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "c":
		userInputQuiz05()
def userInputQuiz06():
	quiz05Question6()
	userInput = input("What is your answer? : ")
	if userInput.lower().strip() != "b":
		userInputQuiz06()

def runLec05():
	summaryOfSections05()
	sectionUserInput()
	userInputQuiz01()
	userInputQuiz02()
	userInputQuiz03()
	userInputQuiz04()
	userInputQuiz05()
	userInputQuiz06()

	print("***** LECTURE 05 COMPLETE *****")

## codeRun06.py

def summaryOfSections06():
	print("\n----------\nLECTURE 06\n----------\n")


def sectionMathOPS():
	text = '''
Programming and mathematics go together like peanut butter and jelly, most of the time they come smashed together.
Many of the skills needed in math, can be found all over programming. The most important is having good problem solving skills, critical thinking skills, and attention to detail.

All of the math operations we have learnt in grade school are found in even the most complicated of programs!

Common Math Operations:

Addition:
3 + 4 = 7 
Subtraction:
4 + 3 = 1
Multiplication:
3 * 4 = 12
Division:
2 / 4 = 0.5 

New Math operations:

Floor Division:
4 // 3 = 1
Rounding down after regular division
Modulo:
7 % 3 = 1
Calculating remainder of division
Exponents:
3 ** 4 = 81
Multiplying by a factor of itself



	'''

	print(text)
	return text



def runLec06():
	summaryOfSections06()
	sectionMathOPS()
	print("***** LECTURE 06 COMPLETE *****")

def week2Run():
	runLec04()
	runLec05()
	runLec06()

	print("\n*************************\n***** WEEK 2 COMPLETE *****\n*************************\n")
week2Run()




